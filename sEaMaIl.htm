#!/usr/bin/perl

################################################################
#   Program:    Email Validity Checker                         #
#   Author:     Luis Gustavo Rodriguez (drlouie)               #
#   Copyright:  (c) 2016 Luis G. Rodriguez                     #
#   Licensing:  MIT License                                    #
##################################################################################
# Permission is hereby granted, free of charge, to any person obtaining a copy   #
# of this software and associated documentation files (the "Software"), to deal  #
# in the Software without restriction, including without limitation the rights   #
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell      #
# copies of the Software, and to permit persons to whom the Software is          #
# furnished to do so, subject to the following conditions:                       #
#                                                                                #
# The above copyright notice and this permission notice shall be included in all #
# copies or substantial portions of the Software.                                #
#                                                                                #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR     #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,       #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE    #
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER         #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,  #
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE  #
# SOFTWARE.                                                                      #
##################################################################################

##--->>  0 - The email address appears to be valid.
##--->>  1 - No email address was supplied.
##--->>  2 - There is a syntaxical error in the email address.
##--->>  3 - There are no DNS entries for the host in question (no MX records or A records).
##--->>  4 - There are no live SMTP servers accepting connections for this email address.
##--->>  >> 5 - Secondary syntaxical check failed on email.

##--->>  >> >> >> 6 - EXTREME CODE TAMPER FLAG -->> MAYBE SOMEONE TRYING TO MANIPULATE THIS CONNECTION BETWEEN THIS TOOL AND CLIENT
##--->>  >> >> >> 		NEXT CODE REVERSE CODE EMAIL FOR BEST ENCRYPTION OF CONNECTION + PORT BINDING
##--->>  >> >> >> 		THIS WAY NO UNWANTED PLAYERS TO OUR FUNCTIONS

	print "Content-type:text/html\n\n";

	require("/var/www/vps-net.com/htdocs/earth-health-monitor/DN/parse_query.nsp");
	
	use CGI qw/:standard/;
	use Mail::Verify;

	my $q = new CGI;

	&FunctionCallCheck;

	
	sub ValidEmail {
		return 0 if $_[0] =~ /(?:[\.\-\_]{2,})|(?:@[\.\-\_])|(?:[\.\-\_]@)|(?:\A\.)/;
		return 1 if $_[0] =~ /^[\w\.\-\_]+\@\[?[\w\.\-\_]+\.(?:[\w\.\-\_]{2,}|[0-9])\]?$/;
		return 0;
	}

	sub RemoteCheck {
	  	$email_ck = Mail::Verify::CheckAddress( $email );
	}
	
	sub FunctionCallCheck {

		use DBI;
		my $dbh = DBI->connect("DBI:mysql:dn_federal",$leLU,$leLP) or die "<b>hmPrc-DBC/b>\n"; 
		$dbh->{RaiseError} = 1; 

		my $sth = $dbh->prepare("SELECT ENCRYPT('elekUmschlag','RP')");
		$sth->execute or die "\n";
		my $row = $sth->fetchrow_arrayref;
		$elCrypto = $row->[0];
		$sth->finish;
		
		##-- RPyyc4dBe4tWE
		$call = $q->param("$elCrypto");
		
		##-->> if the query string name matches that which was sent from server...
		##-->> now check email with this info
		if ($call) {
			## elekUmschlag [ Umschlag Elektronisch - Electronic Envelope ]
			&ProceedWithMailCheck;
		}
		##-->> if not kill the process returning error 6
		else {
			print "6";
		}

		$dbh->disconnect;
	}
	
	
	
	
	
	sub ProceedWithMailCheck {
		## quality check
		$email = $q->param("$elCrypto");
		if(ValidEmail($email)) {
			## dns/smtp check
			&RemoteCheck;

  			if($email_ck) {
      			print "$email_ck";
		  	}
			else {
				print "0";
			}
		}
		else { print "5"; }
	}


exit;
